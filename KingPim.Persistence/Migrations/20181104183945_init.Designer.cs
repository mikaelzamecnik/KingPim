// <auto-generated />
using System;
using KingPim.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KingPim.Persistence.Migrations
{
    [DbContext(typeof(KingPimDbContext))]
    [Migration("20181104183945_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KingPim.Domain.Entities.AttributeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AttributeGroups");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.AttributeType", b =>
                {
                    b.Property<int>("SingleAttributeId");

                    b.Property<int?>("AttributeGroupId");

                    b.Property<int>("Id");

                    b.Property<int>("ProductId");

                    b.Property<string>("Value");

                    b.HasKey("SingleAttributeId", "AttributeGroupId");

                    b.HasAlternateKey("AttributeGroupId", "SingleAttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("AttributeTypes");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.AttributeTypeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeGroupId");

                    b.Property<int>("AttributeId");

                    b.Property<int>("ProductId");

                    b.Property<int?>("SingleAttributeId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeGroupId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SingleAttributeId");

                    b.ToTable("AttributeTypeValues");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("PublishedStatus");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("EditedBy");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("PublishedStatus");

                    b.Property<int?>("SubCategoryId");

                    b.Property<string>("Version");

                    b.HasKey("ProductID");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.ProductAttributesValue", b =>
                {
                    b.Property<int>("ProductID");

                    b.Property<int>("SingleAttributeId");

                    b.Property<string>("Value");

                    b.HasKey("ProductID", "SingleAttributeId");

                    b.ToTable("ProductAttributesValues");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SingleAttribute", b =>
                {
                    b.Property<int>("SingleAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeGroupId");

                    b.Property<string>("Name");

                    b.HasKey("SingleAttributeId");

                    b.HasIndex("AttributeGroupId");

                    b.ToTable("SingleAttributes");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubcategoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID");

                    b.Property<bool>("PublishedStatus");

                    b.Property<string>("SubcategoryName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("SubcategoryID");

                    b.HasIndex("CategoryID");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SubcategoryAttributeGroup", b =>
                {
                    b.Property<int>("SubcategoryId");

                    b.Property<int>("AttributeGroupId");

                    b.Property<int>("Id");

                    b.HasKey("SubcategoryId", "AttributeGroupId");

                    b.HasAlternateKey("AttributeGroupId", "SubcategoryId");

                    b.ToTable("SubcategoryAttributeGroups");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.AttributeType", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.AttributeGroup", "AttributeGroup")
                        .WithMany()
                        .HasForeignKey("AttributeGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KingPim.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KingPim.Domain.Entities.SingleAttribute", "SingleAttribute")
                        .WithMany()
                        .HasForeignKey("SingleAttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KingPim.Domain.Entities.AttributeTypeValue", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.AttributeGroup", "AttributeGroup")
                        .WithMany()
                        .HasForeignKey("AttributeGroupId");

                    b.HasOne("KingPim.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KingPim.Domain.Entities.SingleAttribute", "SingleAttribute")
                        .WithMany("AttributeTypeValue")
                        .HasForeignKey("SingleAttributeId");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.Product", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SingleAttribute", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.AttributeGroup", "AttributeGroup")
                        .WithMany("SingleAttribute")
                        .HasForeignKey("AttributeGroupId");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SubCategory", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryID");
                });

            modelBuilder.Entity("KingPim.Domain.Entities.SubcategoryAttributeGroup", b =>
                {
                    b.HasOne("KingPim.Domain.Entities.AttributeGroup", "AttributeGroup")
                        .WithMany("SubcategoryAttributeGroups")
                        .HasForeignKey("AttributeGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KingPim.Domain.Entities.SubCategory", "SubCategory")
                        .WithMany("SubcategoryAttributeGroups")
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
